import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.D7PM7P9k.js";const E=JSON.parse('{"title":"异常处理","description":"","frontmatter":{},"headers":[],"relativePath":"src/guide/core/exception.md","filePath":"src/guide/core/exception.md","lastUpdated":1721041426000}'),t={name:"src/guide/core/exception.md"},n=e(`<h1 id="异常处理" tabindex="-1">异常处理 <a class="header-anchor" href="#异常处理" aria-label="Permalink to &quot;异常处理&quot;">​</a></h1><p>框架自带有： <code>CoolCommException</code>、<code>CoolCoreException</code>、<code>CoolValidateException</code></p><h2 id="通用异常" tabindex="-1">通用异常 <a class="header-anchor" href="#通用异常" aria-label="Permalink to &quot;通用异常&quot;">​</a></h2><p>CoolCommException</p><p>返回码： 1001</p><p>返回消息：comm fail</p><p>用法：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以自定义返回消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CoolCommException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;用户不存在~&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="验证异常" tabindex="-1">验证异常 <a class="header-anchor" href="#验证异常" aria-label="Permalink to &quot;验证异常&quot;">​</a></h2><p>CoolValidateException</p><p>返回码： 1002</p><p>返回消息：validate fail</p><p>用法：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以自定义返回消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CoolValidateException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;验证码不正确~&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="核心异常" tabindex="-1">核心异常 <a class="header-anchor" href="#核心异常" aria-label="Permalink to &quot;核心异常&quot;">​</a></h2><p>CoolCoreException</p><p>返回码： 1003</p><p>返回消息：core fail</p><p>用法：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可以自定义返回消息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CoolCoreException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;模块缺少配置文件~&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="全局异常" tabindex="-1">全局异常 <a class="header-anchor" href="#全局异常" aria-label="Permalink to &quot;全局异常&quot;">​</a></h2><p>在系统中抛出异常都会被框架全局捕获，并返回消息：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用户不存在&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,23),p=[n];function l(h,o,d,k,c,r){return a(),i("div",null,p)}const u=s(t,[["render",l]]);export{E as __pageData,u as default};
